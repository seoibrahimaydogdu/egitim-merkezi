# backend/app/trend_service.py
import requests
import os
from dotenv import load_dotenv
from datetime import datetime, timedelta, timezone
from .supabase_client import supabase

load_dotenv()

# Sahte verilerimizi burada tutalÄ±m
DUMMY_TRENDS_DATA = [
    {
        "keyword": "SGE",
        "alert": "YÃœKSELÄ°ÅžTE",
        "message": "Google'Ä±n SGE Ã¶zelliÄŸi hÄ±zla popÃ¼lerlik kazanÄ±yor. Ä°Ã§erik stratejinizi buna gÃ¶re optimize etmelisiniz.",
        "link": "https://www.searchenginejournal.com/google-sge-guide/501234/",
        "icon": "ðŸ“ˆ"
    },
    {
        "keyword": "helpful content update",
        "alert": "DÃœÅžÃœÅžTE",
        "message": "Helpful Content Update konusundaki ilgi azalÄ±yor. Ancak hala Ã¶nemli bir sÄ±ralama faktÃ¶rÃ¼.",
        "link": "https://www.searchenginejournal.com/google-helpful-content-system/461234/",
        "icon": "ðŸ“‰"
    },
    {
        "keyword": "core web vitals",
        "alert": "STABÄ°L",
        "message": "Core Web Vitals arama hacmi stabil. Site hÄ±zÄ±nÄ± ve kullanÄ±cÄ± deneyimini iyileÅŸtirmeye devam edin.",
        "link": "https://web.dev/vitals/",
        "icon": "ðŸ“Š"
    }
]

def get_seo_trends():
    """
    Supabase'den SEO trendlerini Ã§eker. EÄŸer veri yoksa veya eskiyse (24 saatten fazla),
    gÃ¼ncelleyip geri dÃ¶ner. GerÃ§ek bir uygulamada, trend verisi Google Trends'ten Ã§ekilebilir.
    """
    
    # 1. Supabase'den trend verisini Ã§ek
    try:
        response = supabase.table("seo_trends").select("*").execute()
        trends = response.data
    except Exception as e:
        print(f"Supabase'den trend verisi Ã§ekilirken hata oluÅŸtu: {e}")
        return []

    # 2. Veri yoksa veya eskiyse (Ã¶rnekte 24 saat), sahte veriyle gÃ¼ncelle
    if not trends or is_data_outdated(trends):
        print("Trend verisi yok veya gÃ¼ncel deÄŸil. GÃ¼ncelleniyor...")
        try:
            # Supabase'i yeni sahte verilerle gÃ¼ncelliyoruz (upsert)
            supabase.table("seo_trends").upsert(DUMMY_TRENDS_DATA, on_conflict="keyword").execute()
            # GÃ¼ncel veriyi tekrar Ã§ekiyoruz
            response = supabase.table("seo_trends").select("*").execute()
            trends = response.data
        except Exception as e:
            print(f"Supabase'e trend verisi yazÄ±lÄ±rken hata oluÅŸtu: {e}")
            return []

    return trends

def is_data_outdated(trends):
    """
    Verinin 24 saatten eski olup olmadÄ±ÄŸÄ±nÄ± kontrol eder.
    """
    if not trends:
        return True
    
    # En son gÃ¼ncellenen verinin zamanÄ±nÄ± kontrol et
    # TÃ¼m verilerin aynÄ± anda gÃ¼ncellendiÄŸini varsayÄ±yoruz
    last_updated_str = trends[0].get("updated_at")
    if not last_updated_str:
        return True
    
    try:
        last_updated = datetime.fromisoformat(last_updated_str).astimezone(timezone.utc)
        now = datetime.now(timezone.utc)
        return (now - last_updated) > timedelta(hours=24)
    except (ValueError, TypeError) as e:
        print(f"Tarih formatÄ±nda hata: {e}")
        return True